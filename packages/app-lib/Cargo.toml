[package]
authors           = ["Jai A <jaiagr+gpg@pm.me>"]
edition.workspace = true
name              = "theseus"
version           = "1.0.0-local"                # The actual version is set by the theseus-build workflow on tagging

[dependencies]
async_zip = { workspace = true, features = [
  "chrono",
  "tokio-fs",
  "deflate",
  "bzip2",
  "zstd",
  "deflate64",
] }
bytemuck = { workspace = true, features = ["extern_crate_alloc"] }
bytes = { workspace = true, features = ["serde"] }
chardetng.workspace = true
dashmap = { workspace = true, features = ["serde"] }
derive_more = { workspace = true, features = ["display"] }
encoding_rs.workspace = true
enumset.workspace = true
flate2.workspace = true
itertools.workspace = true
phf.workspace = true
png.workspace = true
quick-xml = { workspace = true, features = ["async-tokio"] }
rgb.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_ini.workspace = true
serde_json.workspace = true
serde_with.workspace = true
sha1_smol.workspace = true
sha2.workspace = true
tempfile.workspace = true
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["serde", "v4"] }
zip.workspace = true

chrono             = { workspace = true, features = ["serde"] }
daedalus.workspace = true
dirs.workspace     = true

data-url.workspace  = true
either.workspace    = true
regex.workspace     = true
sysinfo             = { workspace = true, features = ["system", "disk"] }
thiserror.workspace = true

tracing.workspace       = true
tracing-error.workspace = true
tracing-subscriber      = { workspace = true, features = ["chrono", "env-filter"] }

heck.workspace  = true
paste.workspace = true

indicatif = { workspace = true, optional = true }
tauri     = { workspace = true, optional = true, features = ["unstable"] }

async-compression = { workspace = true, features = ["tokio", "gzip"] }
async-recursion.workspace = true
async-tungstenite = { workspace = true, features = [
  "tokio-runtime",
  "tokio-rustls-webpki-roots",
] }
async-walkdir.workspace = true
fs4 = { workspace = true, features = ["tokio"] }
futures = { workspace = true, features = ["async-await", "alloc"] }
reqwest = { workspace = true, features = [
  "json",
  "stream",
  "deflate",
  "gzip",
  "brotli",
  "rustls-tls-webpki-roots",
  "charset",
  "http2",
  "macos-system-configuration",
  "multipart",
] }
tokio = { workspace = true, features = [
  "time",
  "io-util",
  "net",
  "sync",
  "fs",
  "macros",
  "process",
] }
tokio-util = { workspace = true, features = [
  "compat",
  "io",
  "io-util",
  "time",
] }

notify.workspace                = true
notify-debouncer-mini.workspace = true

dunce.workspace = true

whoami.workspace = true

discord-rich-presence.workspace = true

base64.workspace = true
p256             = { workspace = true, features = ["ecdsa"] }
rand.workspace   = true

sqlx = { workspace = true, features = [
  "runtime-tokio",
  "sqlite",
  "macros",
  "migrate",
  "json",
  "uuid",
] }

quartz_nbt = { workspace = true, features = ["serde"] }

hickory-resolver.workspace = true
zbus.workspace             = true

ariadne.workspace   = true
path-util.workspace = true

[target.'cfg(windows)'.dependencies]
windows                = { workspace = true, features = ["Networking_Connectivity"] }
windows-core.workspace = true
winreg.workspace       = true

[target.'cfg(target_os = "macos")'.dependencies]
cidre = { workspace = true, features = ["nw", "blocks"] }

[build-dependencies]
dotenvy.workspace = true
dunce.workspace   = true

[features]
cli   = ["dep:indicatif"]
tauri = ["dep:tauri"]

[lints]
workspace = true
